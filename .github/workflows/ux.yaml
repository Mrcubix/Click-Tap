name: Build UX

on:
  push:
    paths:
      - '.modules/OpenTabletDriver.External/**'
      - '.modules/OpenTabletDriver.External-0.6.x/**'
      - 'ClickTap.Lib/**'
      - 'ClickTap.UX/**'
      - 'ClickTap.UX.Desktop/**'
    branches:
      - master

  pull_request:
    branches:
      - master

  workflow_dispatch:

jobs:

  package:

    strategy:
      matrix:
        runtimes: 
          - { runtime: win-x64, os: windows }
          - { runtime: win-x86, os: windows }
          - { runtime: win-arm64, os: windows }
          - { runtime: linux-x64, os: linux }
          - { runtime: linux-arm64, os: linux }
          - { runtime: linux-arm, os: linux }
          - { runtime: osx-universal, os: macos }

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x

    - name: Build Non-Universal
      if: matrix.runtimes.os != 'macos'
      run: dotnet publish ClickTap.UX.Desktop -c Release -p:noWarn='"NETSDK1138;VSTHRD200"' -r ${{ matrix.runtimes.runtime }} -o build/ux/${{ matrix.runtimes.runtime }}

    - name: Build Universal
      if: matrix.runtimes.os == 'macos'
      run: |
        dotnet publish ClickTap.UX.Desktop -c Release -p:noWarn='"NETSDK1138;VSTHRD200"' -r osx-x64 -o build/ux/osx-x64 -p:SelfContained=true -p:PublishSingleFile=false -p:PublishTrimmed=false -p:IncludeNativeLibrariesForSelfExtract=false  
        dotnet publish ClickTap.UX.Desktop -c Release -p:noWarn='"NETSDK1138;VSTHRD200"' -r osx-arm64 -o build/ux/osx-arm64 -p:SelfContained=true -p:PublishSingleFile=false -p:PublishTrimmed=false -p:IncludeNativeLibrariesForSelfExtract=false 

    - name: Create Packages Directory
      run: mkdir -p build/packages

    - name: Install tree (debug)
      run: sudo apt install -y tree

    - name: Generate Windows Filename 
      if: matrix.runtimes.os == 'windows'
      run: |
        echo "path=build/ux/${{ matrix.runtimes.runtime }}/*" >> $GITHUB_ENV
        echo "name=ClickTap.UX-${{ matrix.runtimes.runtime }}" >> $GITHUB_ENV

    - name: Generate Linux Filename 
      if: matrix.runtimes.os == 'linux'
      run: |
        echo "path=build/packages/ClickTap.UX${{ matrix.runtimes.runtime }}/*" >> $GITHUB_ENV
        echo "name=ClickTap.UX-${{ matrix.runtimes.runtime }}" >> $GITHUB_ENV
        ./packaging/linux/package.sh --package tarball --runtime ${{ matrix.runtimes.runtime }}

    - name: Generate OSX Filename 
      if: matrix.runtimes.os == 'macos'
      run: |
        echo "path=build/packages/ClickTap.app" >> $GITHUB_ENV
        echo "name=ClickTap.UX-${{ matrix.runtimes.runtime }}" >> $GITHUB_ENV
        ./packaging/macos/package.sh

    - uses: actions/upload-artifact@main
      name: Upload artifact
      env:
        name: ${{ env.name }}
        path: ${{ env.path }}
      with:
        name: ${{ env.name }}
        path: ${{ env.path }}
